service: product-service
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: personalAccount
  region: us-east-1
  environment:
    PG_HOST: ''
    PG_PORT: ''
    PG_DB: ''
    PG_USERNAME: ''
    PG_PASSWORD: ''
    SNS_ARN: 
      Ref: SNSTopic
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - sns:Publish
      Resource:
        Ref: SNSTopic

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          method: get
          path: product-list
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          method: get
          path: product-list/{id}
  addProduct:
    handler: handler.addProduct
    events:
      - http:
          method: post
          path: product-list
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn: 
            Fn::GetAtt:
              - SQSQueue
              - Arn

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue.fifo
        FifoQueue: true
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: ''
        Protocol: email
        TopicArn:
          Ref: SNSTopic

# outputs:
#   catalogItemsQueue:
#     url: { Ref: SQSQueue }

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
